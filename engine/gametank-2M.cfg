#Linker config to create a GameTank 2 Megabyte image
MEMORY {
    ZP0:        start =    $0, size =  $100, type   = rw, define = yes;
    RAMPAGEMARK:    start = $1FFF, size = $1, type = rw;
    RAM0:       start =  $200, size = $1CFF, define = yes, bank = 0;
    RAM1:       start =  $200, size = $1CFF, define = yes, bank = 1;
    ARAM:       start = $3000, size = $1000, define = yes;
    ROM:       start = $C000, size = $4000, file   = "%O.bankFF", bank = 255, fill = yes;
}

SEGMENTS {
    ZEROPAGE: load = ZP0,  type = zp,  define   = yes;
    DATA:     load = ROM, type = rw,  define   = yes, run = RAM0;
    BSS:      load = RAM0, type = bss, define   = yes;
    RAMPAGEMARK: load = RAMPAGEMARK, type = bss, define = yes;
    DRAWQ:    load = RAM1, type = bss, define = yes, align = $100;
    ACP:      load = ARAM, type = bss, define = yes;
    ACP_MISC: load = ARAM, type = bss, define = yes, start = $3E00;
    ACPVECS:  load = ARAM, type = bss, define = yes, start = $3FFA;
    HEAP:     load = RAM0, type = bss, optional = yes;
    ONCE:     load = ROM, type = ro,  optional = yes;
    CODE:     load = ROM, type = ro;
    RODATA:   load = ROM, type = ro;
    STARTUP:  load = ROM, type = ro;
    VECTORS:  load = ROM, type = ro,  start    = $FFFA;
}

FEATURES {
    CONDES:    segment = STARTUP,
               type    = constructor,
               label   = __CONSTRUCTOR_TABLE__,
               count   = __CONSTRUCTOR_COUNT__;
    CONDES:    segment = STARTUP,
               type    = destructor,
               label   = __DESTRUCTOR_TABLE__,
               count   = __DESTRUCTOR_COUNT__;
}

SYMBOLS {
    # Define the stack size for the application
    __STACKSIZE__:  value = $0800, type = weak;
}